name: Check Markdown Files

on:
  push:
    branches:
      - master   # This will run the action every Sunday at midnight

jobs:
  check-markdown-updates:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch the full history to access all logs

      - name: Get date 1 month ago
        id: get_cutoff_date
        run: |
          echo "CUTOFF_DATE=$(date -d '1 month ago' +%Y-%m-%d)" >> $GITHUB_ENV

      - name: Find outdated Markdown files
        id: find_outdated_files
        run: |
          echo $CUTOFF_DATE
          # Initialize an empty variable to store outdated files
          OUTDATED_FILES=""

          FILES=$(git ls-files '*.md')
          
          for file in $FILES 
            do
              echo "Getting last commit date for $file"
            
              #  Get the last commit date for the file
              LAST_COMMIT_DATE=$(git log -1 --pretty="format:%ci" $file)

              echo $LAST_COMMIT_DATE
            done

            LAST_COMMIT_DATE=$(git log -1 --format=%ci -- $file | cut -d' ' -f1)

            # Check if the last commit date is older than 1 month
            if [[ "$LAST_COMMIT_DATE" < "$CUTOFF_DATE" ]]; then
              OUTDATED_FILES="$OUTDATED_FILES\n$file (Last updated: $LAST_COMMIT_DATE)"
            fi
          done

          # Set the output variable with the list of outdated files
          if [[ -n "$OUTDATED_FILES" ]]; then
            echo "OUTDATED_FILES=true" >> $GITHUB_ENV
            echo "FILE_LIST=$OUTDATED_FILES" >> $GITHUB_ENV
          else
            echo "OUTDATED_FILES=false" >> $GITHUB_ENV
          fi
